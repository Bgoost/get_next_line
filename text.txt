hola que tal como estas tu\n, pero hace un poco muchod e frio\n jurjurjurjur\0


static char *storage = NULL

# FUNCTION FILL_STORAGE(fd, storage)
char buffer[BUFFER_SIZE + 1];
BUFFER_SIZE = 10
int num_bytes;
while(){
	num_bytes = read(fd, buffer, BUFFER_SIZE)
	bufer -> hola que t
	buffer[num_bytes] = '\0'
	bufer -> hola que t\0
	storage = strjoin(storage, buffer);
	storage - > hola que t\0
}
num_bytes = read(fd, buffer, BUFFER_SIZE)
bufer -> al como es
buffer[num_bytes] = '\0'
bufer -> al como es\0
storage = strjoin(storage, buffer);
storage - > hola que tal como es\0
num_bytes = read(fd, buffer, BUFFER_SIZE)
bufer -> as tu\n, p
buffer[num_bytes] = '\0'
bufer -> as tu\n, p\0
storage = strjoin(storage, buffer);
storage - > hola que tal como estas tu\n, p\0
# char *FUNCTION GET_THE_LINE(storage)
	storage - > hola que tal como estas tu\n, p\0
	//count how big is the line
	char *line = malloc(sizeof(char) * how_big_is_the_line)
	//we will copy the line from storage to line
	return(line)
# char *UPDATE_STORAGE(storage)
	storage - > hola que tal como estas tu\n, p\0
	HOW_MUTCH I HAVE TO KEEP FROM< STORAGE????
	char *new_Storage = malloc(sizeof(char) * 4)
	// We will copy from storage to new storage, the part that i want to save
	free(storage)
	return(new_storage)
# GET_NEXT_LINE()
{
	static char *storage = NULL
	char *line;
	
	storage = FUNCTION FILL_STORAGE(fd, storage)
	if(!storrage)
		return NULL;
	line = GET_THE_LINE(storage)
	if(!line)
		return NULL;
	storage = UPDATE_STORAGE(storage)
	return line;
}
int main()
{
	
	int fd;
	char *line;
	fd = open("mifile.txt", "RW")
	line = get_next_line(fd);
	printf("%s", line;)
	while(line)
	{
		line = get_next_line(fd);
		printf("%s", line;)
	}
}hola jiji
